-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\LogicProcessor\LogicProcessor.vhd
-- Created: 2016-09-07 22:59:44
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LogicProcessor
-- Source Path: LogicProcessor/LogicProcessor
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY LogicProcessor IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        CH1_SIG1_INPUT                    :   IN    std_logic;
        CH1_FREQ1_INPUT1                  :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        In2                               :   IN    std_logic;
        CH1_SIG1_OUTPUT                   :   OUT   std_logic;
        CH1_FREQ1_OUTPUT1                 :   OUT   std_logic;
        Out3                              :   OUT   std_logic;
        Out4                              :   OUT   std_logic
        );
END LogicProcessor;


ARCHITECTURE rtl OF LogicProcessor IS

  -- Component Declarations
  COMPONENT moore_sf
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          CH1_SIG1_INPUT                  :   IN    std_logic;
          CH1_FREQ1_INPUT1                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          ready                           :   OUT   std_logic;
          enable                          :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT mealy_sf
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          get_going                       :   IN    std_logic;
          ready                           :   OUT   std_logic;
          enable                          :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : moore_sf
    USE ENTITY work.moore_sf(rtl);

  FOR ALL : mealy_sf
    USE ENTITY work.mealy_sf(rtl);

  -- Signals
  SIGNAL ready                            : std_logic;
  SIGNAL counter_en                       : std_logic;
  SIGNAL ready_1                          : std_logic;
  SIGNAL counter_en_1                     : std_logic;

BEGIN
  u_moore_sf : moore_sf
    PORT MAP( clk => clk,
              reset => reset,
              CH1_SIG1_INPUT => CH1_SIG1_INPUT,
              CH1_FREQ1_INPUT1 => CH1_FREQ1_INPUT1,  -- uint32
              ready => ready,
              enable => counter_en
              );

  u_mealy_sf : mealy_sf
    PORT MAP( clk => clk,
              reset => reset,
              get_going => In2,
              ready => ready_1,
              enable => counter_en_1
              );

  CH1_SIG1_OUTPUT <= ready;

  CH1_FREQ1_OUTPUT1 <= counter_en;

  Out3 <= ready_1;

  Out4 <= counter_en_1;

END rtl;

